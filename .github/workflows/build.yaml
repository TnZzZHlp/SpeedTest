# .github/workflows/build.yml
name: Build

on:
  push:
    tags:
      - "v*"

  workflow_dispatch:

jobs:
  build:
    name: build ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            archive: zip
          # - target: i686-pc-windows-gnu  # error: linker `i686-w64-mingw32-gcc` not found
          #   os: windows-latest
          #   archive: zip
          #   - target: x86_64-apple-darwin
          #     os: macos-latest
          #     archive: zip
          #   - target: aarch64-apple-darwin
          #     os: macos-latest
          #     archive: zip
          #   - target: aarch64-unknown-linux-musl
          #     os: ubuntu-latest
          #     archive: tar.gz tar.xz tar.zst
          # - target: arch64-unknown-linux-musl
          #   archive: tar.gz tar.xz tar.zst
          # - target: x86_64-unknown-linux-musl
          #   os: ubuntu-latest
          #   archive: tar.gz tar.xz tar.zst
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            archive: tar.gz tar.xz tar.zst
        #   - target: arm-unknown-linux-musleabi
        #     os: ubuntu-latest
        #     archive: tar.gz tar.xz tar.zst
        #   - target: arm-unknown-linux-musleabihf
        #     os: ubuntu-latest
        #     archive: tar.gz tar.xz tar.zst
        # - target: mips-unknown-linux-musl
        #   archive: tar.gz tar.xz tar.zst
        # - target: mips-unknown-linux-musl
        #   archive: tar.gz tar.xz tar.zst
        # - target: mips64-unknown-linux-muslabi64
        #   archive: tar.gz tar.xz tar.zst
        # - target: x86_64-unknown-freebsd
        #   os: ubuntu-latest
        #   archive: tar.gz tar.xz tar.zst

    runs-on: ${{matrix.os}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Install Rust Toolchain Components
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Publish archive
        if: ${{ !contains(matrix.target, 'windows') }}
        env:
          ARCHIVE_FILE: SpeedTest-${{ matrix.target }}
        run: |
          cp target/${{ matrix.target }}/release/SpeedTest SpeedTest-${{ matrix.target }}

      - name: Publish zip archive windows
        if: ${{ contains(matrix.target, 'windows') }}
        env:
          ARCHIVE_FILE: SpeedTest-${{ matrix.target }}.exe
        run: |
          cp target/${{ matrix.target }}/release/SpeedTest.exe SpeedTest-${{ matrix.target }}.exe
        shell: bash

      - name: Upload artifact Windows
        uses: actions/upload-artifact@v4
        if: ${{ contains(matrix.target, 'windows') }}
        env:
          ARCHIVE_FILE: SpeedTest-${{ matrix.target }}.exe
        with:
          name: SpeedTest-${{ matrix.target }}
          retention-days: 30
          path: ${{ env.archive_file }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: ${{ !contains(matrix.target, 'windows') }}
        env:
          ARCHIVE_FILE: SpeedTest-${{ matrix.target }}
        with:
          name: SpeedTest-${{ matrix.target }}
          retention-days: 30
          path: ${{ env.archive_file }}

      - name: Publish release Windows
        uses: softprops/action-gh-release@v2.0.6
        if: ${{ startsWith(github.ref_name, 'v') }} && ${{ contains(matrix.target, 'windows') }}
        with:
          draft: false
          tag_name: ${{ github.ref_name }}
          files: |
            ${{ env.archive_file }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARCHIVE_FILE: SpeedTest-${{ matrix.target }}.exe

      - name: Publish release
        uses: softprops/action-gh-release@v2.0.6
        if: ${{ startsWith(github.ref_name, 'v') }} && ${{ !contains(matrix.target, 'windows') }}
        with:
          draft: false
          tag_name: ${{ github.ref_name }}
          files: |
            ${{ env.archive_file }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARCHIVE_FILE: SpeedTest-${{ matrix.target }}
